{"ast":null,"code":"import * as React from 'react';\nconst default_key = 'sharethis';\nconst social_icon = {\n  display: 'inline-block',\n  width: '50px',\n  height: '50px',\n  position: 'relative',\n  overflow: 'hidden',\n  verticalAlign: 'middle'\n};\nconst social_container = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  width: '100%',\n  height: '100%'\n};\nconst social_svg = { ...social_container,\n  borderRadius: '50%',\n  fillRule: 'evenodd'\n};\nconst social_svg_g = {\n  transition: 'fill 170ms ease-in-out',\n  fill: 'transparent'\n};\n\nconst makeUriRegex = function () {\n  let socials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return new RegExp('(?:[/.]|^)($SOCIALS)[.]'.replace('$SOCIALS', socials.join('|').replace(/\\./gu, '\\\\.')), 'u');\n};\n\nconst social_icons = new Map();\nconst network_names = new Set();\nlet uri_regex = makeUriRegex();\n\nfunction getNetworks() {\n  return [...network_names];\n} // note: deprecate in v7\n\n\nfunction getKeys() {\n  return getNetworks();\n}\n\nfunction register(social, icon) {\n  social_icons.set(social, icon);\n  network_names.add(social);\n  uri_regex = makeUriRegex( // sort by longest string first\n  [...network_names].sort((pre, post) => post.length - pre.length));\n  return icon;\n}\n\nfunction networkFor(url) {\n  if (!url) {\n    return default_key;\n  }\n\n  if (url.startsWith('mailto:')) {\n    return 'mailto';\n  }\n\n  return url.match(uri_regex)?.[1] || default_key;\n}\n\nconst SocialIcon = /*#__PURE__*/React.forwardRef(function SocialIcon(props, ref) {\n  const {\n    as = 'a',\n    href,\n    url,\n    network,\n    bgColor,\n    fgColor,\n    className,\n    label,\n    children,\n    fallback,\n    defaultSVG,\n    ...rest\n  } = props;\n  const networkKey = network || networkFor(url);\n  const ariaLabel = label || props['aria-label'] || networkKey;\n  const fallbackIcon = (typeof fallback === 'string' ? social_icons.get(fallback) : fallback || defaultSVG) || social_icons.get(default_key);\n  const {\n    color,\n    path\n  } = networkKey === default_key ? fallbackIcon : social_icons.get(networkKey) || {};\n  return /*#__PURE__*/React.createElement(as, {\n    href: href || url,\n    className: `social-icon${className ? ` ${className}` : ''}`,\n    ...rest,\n    style: { ...social_icon,\n      ...rest.style\n    },\n    'aria-label': ariaLabel,\n    ref\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"social-container\",\n    style: social_container\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    role: \"img\",\n    \"aria-label\": `${ariaLabel} social icon`,\n    className: \"social-svg\",\n    viewBox: \"0 0 64 64\",\n    style: social_svg\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"social-svg-icon\",\n    style: { ...social_svg_g,\n      fill: fgColor || 'white'\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: `M0,0H64V64H0Z${path}`\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"social-svg-mask\",\n    style: { ...social_svg_g,\n      fill: bgColor || color\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: path\n  })))), children);\n});\nexport { SocialIcon, getKeys, getNetworks, networkFor, network_names, register, social_icons, uri_regex };","map":{"version":3,"sources":["F:/CS/CODSOFT/Quote/quote-generator/node_modules/react-social-icons/dist/component.js"],"names":["React","default_key","social_icon","display","width","height","position","overflow","verticalAlign","social_container","top","left","social_svg","borderRadius","fillRule","social_svg_g","transition","fill","makeUriRegex","socials","arguments","length","undefined","RegExp","replace","join","social_icons","Map","network_names","Set","uri_regex","getNetworks","getKeys","register","social","icon","set","add","sort","pre","post","networkFor","url","startsWith","match","SocialIcon","forwardRef","props","ref","as","href","network","bgColor","fgColor","className","label","children","fallback","defaultSVG","rest","networkKey","ariaLabel","fallbackIcon","get","color","path","createElement","style","role","viewBox","d"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nconst default_key = 'sharethis';\nconst social_icon = {\n  display: 'inline-block',\n  width: '50px',\n  height: '50px',\n  position: 'relative',\n  overflow: 'hidden',\n  verticalAlign: 'middle'\n};\nconst social_container = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  width: '100%',\n  height: '100%'\n};\nconst social_svg = {\n  ...social_container,\n  borderRadius: '50%',\n  fillRule: 'evenodd'\n};\nconst social_svg_g = {\n  transition: 'fill 170ms ease-in-out',\n  fill: 'transparent'\n};\nconst makeUriRegex = function () {\n  let socials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return new RegExp('(?:[/.]|^)($SOCIALS)[.]'.replace('$SOCIALS', socials.join('|').replace(/\\./gu, '\\\\.')), 'u');\n};\nconst social_icons = new Map();\nconst network_names = new Set();\nlet uri_regex = makeUriRegex();\nfunction getNetworks() {\n  return [...network_names];\n}\n\n// note: deprecate in v7\nfunction getKeys() {\n  return getNetworks();\n}\nfunction register(social, icon) {\n  social_icons.set(social, icon);\n  network_names.add(social);\n  uri_regex = makeUriRegex(\n  // sort by longest string first\n  [...network_names].sort((pre, post) => post.length - pre.length));\n  return icon;\n}\nfunction networkFor(url) {\n  if (!url) {\n    return default_key;\n  }\n  if (url.startsWith('mailto:')) {\n    return 'mailto';\n  }\n  return url.match(uri_regex)?.[1] || default_key;\n}\nconst SocialIcon = /*#__PURE__*/React.forwardRef(function SocialIcon(props, ref) {\n  const {\n    as = 'a',\n    href,\n    url,\n    network,\n    bgColor,\n    fgColor,\n    className,\n    label,\n    children,\n    fallback,\n    defaultSVG,\n    ...rest\n  } = props;\n  const networkKey = network || networkFor(url);\n  const ariaLabel = label || props['aria-label'] || networkKey;\n  const fallbackIcon = (typeof fallback === 'string' ? social_icons.get(fallback) : fallback || defaultSVG) || social_icons.get(default_key);\n  const {\n    color,\n    path\n  } = networkKey === default_key ? fallbackIcon : social_icons.get(networkKey) || {};\n  return /*#__PURE__*/React.createElement(as, {\n    href: href || url,\n    className: `social-icon${className ? ` ${className}` : ''}`,\n    ...rest,\n    style: {\n      ...social_icon,\n      ...rest.style\n    },\n    'aria-label': ariaLabel,\n    ref\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"social-container\",\n    style: social_container\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    role: \"img\",\n    \"aria-label\": `${ariaLabel} social icon`,\n    className: \"social-svg\",\n    viewBox: \"0 0 64 64\",\n    style: social_svg\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"social-svg-icon\",\n    style: {\n      ...social_svg_g,\n      fill: fgColor || 'white'\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: `M0,0H64V64H0Z${path}`\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"social-svg-mask\",\n    style: {\n      ...social_svg_g,\n      fill: bgColor || color\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: path\n  })))), children);\n});\n\nexport { SocialIcon, getKeys, getNetworks, networkFor, network_names, register, social_icons, uri_regex };\n"]},"metadata":{},"sourceType":"module"}